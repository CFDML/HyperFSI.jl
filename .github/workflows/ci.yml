name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        julia-version: ['1.11']

    steps:
      - uses: actions/checkout@v4

      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}

      - name: Cache Julia artifacts
        uses: actions/cache@v4
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-julia-artifacts-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-artifacts-

      - name: Cache Julia compiled
        uses: actions/cache@v4
        with:
          path: ~/.julia/compiled
          key: ${{ runner.os }}-julia-compiled-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-compiled-

      - name: Cache Conda env
        uses: actions/cache@v4
        with:
          path: ~/.julia/conda
          key: ${{ runner.os }}-julia-conda-${{ hashFiles('**/Manifest.toml') }}
          restore-keys: |
            ${{ runner.os }}-julia-conda-

      - name: Force PyCall to use Conda on macOS
        if: runner.os == 'macOS'
        run: julia -e 'ENV["PYTHON"] = ""; using Pkg; Pkg.add("PyCall"); Pkg.build("PyCall")'

      - name: Install dependencies with retry and heartbeat
        shell: bash
        run: |
          for i in 1 2 3; do
            julia --project=@. -e 'using Pkg; Pkg.instantiate()' &
            pid=$!
            while kill -0 $pid 2>/dev/null; do echo "Still working..."; sleep 60; done
            wait $pid && break
            echo "Retry $i/3 after failure..."
            sleep 10
          done

      - name: Run tests with retry and heartbeat
        shell: bash
        run: |
          for i in 1 2 3; do
            julia --project=@. -e 'using Pkg; Pkg.test()' &
            pid=$!
            while kill -0 $pid 2>/dev/null; do echo "Still testing..."; sleep 60; done
            wait $pid && break
            echo "Retry $i/3 after failure..."
            sleep 10
          done
